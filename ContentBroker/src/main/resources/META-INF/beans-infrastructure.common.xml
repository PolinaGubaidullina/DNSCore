<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util-3.0.xsd
           http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task-3.0.xsd">
          
    <import resource="classpath*:META-INF/beans-infrastructure.core.xml"/>      
    <import resource="classpath*:META-INF/beans-infrastructure.knownerrors.xml"/>
    
    <bean id="actionRegistry" class="de.uzk.hki.da.action.ActionRegistry">
		<property name="maxThreads" ref="actionThreads" />
		<property name="actionPriority" ref="actionOrdering" />
		<property name="blockedBy">
			<util:map>
				<entry key="IngestArchiveReplicationAction" value="IngestArchiveReplicationCheckAction"/>
			</util:map>
		</property>
	</bean>
    
    <bean id="contentBroker" class="de.uzk.hki.da.main.ContentBroker" init-method="init">
        <property name="serverSocketNumber" value="${cb.serverSocketNumber}" />
        <property name="mqBroker" ref="mqBroker" />
       <property name="jmsMessageServiceHandler" ref="jmsMessageServiceHandler"/>
       <property name="actionInformation" ref="actionInformation" />
       <property name="actionFactory" ref="actionFactory" />
    </bean>
    
    <bean id="contentBrokerWorker" class="de.uzk.hki.da.core.ContentBrokerWorker">
        <property name="taskExecutor" ref="taskExecutor" />
        <property name="actionFactory" ref="actionFactory" />
    </bean>
    
          
	<util:map id="updateMetadataNamespaces">
  		<entry key="mets" value="http://www.loc.gov/METS/"/>
		<entry key="rdf" value="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
		<entry key="lido" value="http://www.lido-schema.org"/>
		<entry key="xlink" value="http://www.w3.org/1999/xlink"/>
  	</util:map>
  	
  	<util:map id="updateMetadataXpathsForUrls">
<!--   		<entry key="METS" value="//mets:FLocat/@xlink:href"/> -->
		<entry key="METS" value="//mets:file"/> 
  		<entry key="EAD" value="//daoloc/@href"/>
  		<entry key="XMP" value="//rdf:Description/@rdf:about"/>
  		<entry key="LIDO" value="//lido:linkResource"/>
  	</util:map>

  	<util:map id="viewerUrls">
  		<entry key="METS" value="http://dfg-viewer.de/show/?set[mets]="/>
  		<entry key="EAD" value="http://data.danrw.de/ead-viewer/#/browse?src="/>
  		<entry key="XMP" value="http://data.danrw.de/xmp-viewer/#/browse?src="/>
  		<entry key="LIDO" value="http://data.danrw.de/lido-viewer/#/browse?src="/>
  	</util:map>
          
    <bean id="ingestAreaScannerWorker" class="de.uzk.hki.da.core.IngestAreaScannerWorker" init-method="init">
        <property name="ingestAreaRootPath" value="${localNode.ingestAreaRootPath}" />
        <property name="localNodeId" value="${localNode.id}" />
        <property name="minAge" value="2000" />
        <property name="registerObjectService" ref="registerObjectService" />
    </bean>

    <bean id="ingestAreaNoBagitScannerWorker" class="de.uzk.hki.da.core.IngestAreaNoBagitScannerWorker" init-method="init">
        <property name="ingestAreaNoBagitRootPath" value="${localNode.ingestAreaNoBagitRootPath}" />
        <property name="localNodeId" value="${localNode.id}" />
        <property name="minAge" value="2000" />
        <property name="registerObjectService" ref="registerObjectService" />
    </bean>
    
    <bean id="userDecisionTimeoutWorker" class="de.uzk.hki.da.core.UserDecisionTimeoutWorker" init-method="init">
        <property name="localNode" ref="localNode" />
    </bean>
    <bean id="mailWorker" class="de.uzk.hki.da.core.MailWorker" init-method="init">
        <property name="localNode" ref="localNode" />
        <property name="smtpHost" value="${mailWorker.smtpHost:#{null}}"/>
    </bean>
    <bean id="timeBasedPublicationWorker" class="de.uzk.hki.da.core.TimeBasedPublicationWorker" init-method="init">
        <property name="pauseForDays" value="30" />
        <property name="localNode" ref="localNode" />
        <property name="pollForCi" value="${timeBasedPublicationWorker.pollForCi:false}" />
    </bean>
    <bean id="systemEventWorker" class="de.uzk.hki.da.event.SystemEventWorker" init-method="init">
        <property name="localNode" ref="localNode" />
    </bean>
    <bean id="integrityWorker" class="de.uzk.hki.da.core.IntegrityWorker" init-method="init">
        <property name="localNodeId" value="${localNode.id}" />
        <property name="gridFacade" ref="${cb.implementation.grid:fakeGridFacade}" />
     </bean>
	<bean id="repairWorker" class="de.uzk.hki.da.core.RepairWorker" init-method="init">
		<property name="localNodeId" value="${localNode.id}" />
		<property name="zoneName" value="${irods.zone}" />
		<property name="replDestinations" value="${localNode.replDestinations}" />
	</bean>
    <bean id="checksumWorker" class="de.uzk.hki.da.core.ChecksumWorker" init-method="init">
        <property name="localNodeId" value="${checksumNode.id:${localNode.id}}" />
        <property name="secondaryCopyPrefix" value="${checksumNode.secondaryCopyPrefix:federated}" />
        <property name="gridFacade" ref="${cb.implementation.grid:fakeGridFacade}" />
        <property name="trustChecksumForDays" value="${checksumWorker.trustChecksumForDays}" />
        <property name="allowedNumOfCopyjobs" value="${checksumWorker.allowedNumOfCopyjobs}" />
        <property name="startTime" value="${checksumWorker.startTime}" />
        <property name="endTime" value="${checksumWorker.endTime}" />
    </bean>
    	<bean id="distributionWorker" class="de.uzk.hki.da.grid.DistributionWorker" init-method="init">
        <property name="localNodeId" value="${localNode.id}" />
        <property name="jobExecutor" ref="jobExecutor" />
    </bean>
    <bean id="jobExecutor" class="de.uzk.hki.da.grid.IrodsCopyExecutor">
        <property name="dirPrefix" value="federated" />
    </bean>
   	<bean id="actionFactory" class="de.uzk.hki.da.action.ActionFactory" init-method="init">
        <property name="actionRegistry" ref="actionRegistry" />
        <property name="localNode" ref="localNode" />
        <property name="queueConnector" ref="queueConnector" />
        <property name="userExceptionManager" ref="userExceptionManager" />
        <property name="jmsMessageServiceHandler" ref="jmsMessageServiceHandler"/>
        <property name="fileFormatFacade" ref="fileFormatFacade" />
        <property name="testContractors" ref="testContractors" />
    </bean>
    
   <bean id="registerObjectService" class="de.uzk.hki.da.core.RegisterObjectService" init-method="init" >
   		<property name="localNodeId" value="${localNode.id}"/>
   		<property name="preservationSystemId" value="1" />
   </bean>
  
  
  
  	<bean class="de.uzk.hki.da.utils.CommandLineConnector" id="formatPackageCommandLineConnector"/>
  	<bean class="de.uzk.hki.da.format.FidoFormatScanService" id="fidoFormatScanService"/>
  	<bean class="de.uzk.hki.da.format.JhoveMetadataExtractor" id="jhoveMetadataExtractor">
  		<property name="cli" ref="formatPackageCommandLineConnector"/>
  	</bean>
  	
  	
  	
  	
  	
  	<bean class="de.uzk.hki.da.format.SubformatScanService" id="subformatScanService"/>
	<bean class="de.uzk.hki.da.format.FakeFormatScanService" id="fakeFormatScanService"/>
	<bean class="de.uzk.hki.da.format.FakeMetadataExtractor" id="fakeMetadataExtractor"/>
	<bean class="de.uzk.hki.da.format.FakeSubformatScanService" id="fakeSubformatScanService"/>
	
	
	
	<bean class="de.uzk.hki.da.format.ConfigurableFileFormatFacade" id="fileFormatFacade">
		<property name="formatScanService" ref="${cb.implementation.formatScanService:fakeFormatScanService}"/>
		<property name="metadataExtractor" ref="${cb.implementation.metadataExtractor:fakeMetadataExtractor}"/>
		<property name="subformatScanService" ref="${cb.implementation.subformatScanService:subformatScanService}"/>
		<property name="knownFormatCommandLineErrors" ref="knownErrors"/>
	</bean>
	
	
	
    <bean class="de.uzk.hki.da.model.JobNamedQueryDAO" id="queueConnector"/>
    
    <bean class="de.uzk.hki.da.format.MimeTypeDetectionService" id="mtds"/>
    
	<bean class="de.uzk.hki.da.core.UserExceptionManager" id="userExceptionManager" init-method="readConfigFile"/>
	
	<bean id="actionInformation" class="de.uzk.hki.da.action.ActionInformation" scope="prototype" init-method="init">
		<property name="actionRegistry" ref="actionRegistry" />
	</bean>
	

	
	
	
</beans>
